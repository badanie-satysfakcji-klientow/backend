name: Django CI

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10.0', '3.10.5']
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Create .env file
      run: |
        echo DATABASE_NAME='{{secrets.DATABASE_NAME}}' >> backend/.env
        echo DATABASE_USER='{{secrets.DATABASE_USER}}' >> backend/.env
        echo DATABASE_PASSWORD='{{secrets.DATABASE_PASSWORD}}' >> backend/.env
        echo DATABASE_HOST='{{secrets.DATABASE_HOST}}' >> backend/.env
        echo DATABASE_PORT='{{secrets.DATABASE_PORT}}' >> backend/.env
        echo EMAIL_HOST_USER='{{secrets.EMAIL_HOST_USER}}' >> backend/.env
        echo EMAIL_HOST_PASSWORD='{{secrets.EMAIL_HOST_PASSWORD}}' >> backend/.env
        echo DEFAULT_FROM_EMAIL='{{secrets.DEFAULT_FROM_EMAIL}}' >> backend/.env
        echo DOMAIN_NAME='{{secrets.DOMAIN_NAME}}' >> backend/.env
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8
    - name: Coverage report
      run: |
        pip install coverage, lorem-text
        coverage run manage.py test
        coverage report
    - name: Django tests
      run: |
        python manage.py test
